// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ApaasUser.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "ApaasUser.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - ApaasUserRoot

@implementation ApaasUserRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - ApaasUserRoot_FileDescriptor

static GPBFileDescriptor *ApaasUserRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - AgoraApaasUserJoin

@implementation AgoraApaasUserJoin

@dynamic hasLts, lts;
@dynamic hasVid, vid;
@dynamic hasVer, ver;
@dynamic hasScenario, scenario;
@dynamic hasErrorCode, errorCode;
@dynamic hasUid, uid;
@dynamic hasUserName, userName;
@dynamic hasStreamUid, streamUid;
@dynamic hasStreamSuid, streamSuid;
@dynamic hasRole, role;
@dynamic hasStreamSid, streamSid;
@dynamic hasRtmSid, rtmSid;
@dynamic hasRoomId, roomId;
@dynamic hasRoomCreateTs, roomCreateTs;

typedef struct AgoraApaasUserJoin__storage_ {
  uint32_t _has_storage_[1];
  int32_t vid;
  int32_t errorCode;
  NSString *ver;
  NSString *scenario;
  NSString *uid;
  NSString *userName;
  NSString *streamSuid;
  NSString *role;
  NSString *streamSid;
  NSString *rtmSid;
  NSString *roomId;
  int64_t lts;
  int64_t streamUid;
  int64_t roomCreateTs;
} AgoraApaasUserJoin__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "lts",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_Lts,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, lts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "vid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_Vid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, vid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "ver",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_Ver,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, ver),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "scenario",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_Scenario,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, scenario),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "errorCode",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_ErrorCode,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, errorCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "uid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_Uid,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, uid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userName",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_UserName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, userName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "streamUid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_StreamUid,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, streamUid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "streamSuid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_StreamSuid,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, streamSuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "role",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_Role,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, role),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "streamSid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_StreamSid,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, streamSid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rtmSid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_RtmSid,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, rtmSid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomId",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_RoomId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, roomId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomCreateTs",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserJoin_FieldNumber_RoomCreateTs,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(AgoraApaasUserJoin__storage_, roomCreateTs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AgoraApaasUserJoin class]
                                     rootClass:[ApaasUserRoot class]
                                          file:ApaasUserRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AgoraApaasUserJoin__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\005\t\000\007\010\000\010\t\000\t\n\000\013\t\000\014\006\000\r\006\000\016\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AgoraApaasUserLeave

@implementation AgoraApaasUserLeave

@dynamic hasLts, lts;
@dynamic hasVid, vid;
@dynamic hasVer, ver;
@dynamic hasScenario, scenario;
@dynamic hasErrorCode, errorCode;
@dynamic hasUid, uid;
@dynamic hasUserName, userName;
@dynamic hasStreamUid, streamUid;
@dynamic hasStreamSuid, streamSuid;
@dynamic hasRole, role;
@dynamic hasStreamSid, streamSid;
@dynamic hasRtmSid, rtmSid;
@dynamic hasRoomId, roomId;
@dynamic hasRoomCreateTs, roomCreateTs;

typedef struct AgoraApaasUserLeave__storage_ {
  uint32_t _has_storage_[1];
  int32_t vid;
  int32_t errorCode;
  NSString *ver;
  NSString *scenario;
  NSString *uid;
  NSString *userName;
  NSString *streamSuid;
  NSString *role;
  NSString *streamSid;
  NSString *rtmSid;
  NSString *roomId;
  int64_t lts;
  int64_t streamUid;
  int64_t roomCreateTs;
} AgoraApaasUserLeave__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "lts",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_Lts,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, lts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "vid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_Vid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, vid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "ver",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_Ver,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, ver),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "scenario",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_Scenario,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, scenario),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "errorCode",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_ErrorCode,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, errorCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "uid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_Uid,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, uid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userName",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_UserName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, userName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "streamUid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_StreamUid,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, streamUid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "streamSuid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_StreamSuid,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, streamSuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "role",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_Role,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, role),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "streamSid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_StreamSid,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, streamSid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rtmSid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_RtmSid,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, rtmSid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomId",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_RoomId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, roomId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomCreateTs",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserLeave_FieldNumber_RoomCreateTs,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(AgoraApaasUserLeave__storage_, roomCreateTs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AgoraApaasUserLeave class]
                                     rootClass:[ApaasUserRoot class]
                                          file:ApaasUserRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AgoraApaasUserLeave__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\005\t\000\007\010\000\010\t\000\t\n\000\013\t\000\014\006\000\r\006\000\016\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AgoraApaasUserReconnect

@implementation AgoraApaasUserReconnect

@dynamic hasLts, lts;
@dynamic hasVid, vid;
@dynamic hasVer, ver;
@dynamic hasScenario, scenario;
@dynamic hasErrorCode, errorCode;
@dynamic hasUid, uid;
@dynamic hasUserName, userName;
@dynamic hasStreamUid, streamUid;
@dynamic hasStreamSuid, streamSuid;
@dynamic hasRole, role;
@dynamic hasStreamSid, streamSid;
@dynamic hasRtmSid, rtmSid;
@dynamic hasRoomId, roomId;
@dynamic hasRoomCreateTs, roomCreateTs;

typedef struct AgoraApaasUserReconnect__storage_ {
  uint32_t _has_storage_[1];
  int32_t vid;
  int32_t errorCode;
  NSString *ver;
  NSString *scenario;
  NSString *uid;
  NSString *userName;
  NSString *streamSuid;
  NSString *role;
  NSString *streamSid;
  NSString *rtmSid;
  NSString *roomId;
  int64_t lts;
  int64_t streamUid;
  int64_t roomCreateTs;
} AgoraApaasUserReconnect__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "lts",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_Lts,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, lts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "vid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_Vid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, vid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "ver",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_Ver,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, ver),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "scenario",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_Scenario,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, scenario),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "errorCode",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_ErrorCode,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, errorCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "uid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_Uid,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, uid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userName",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_UserName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, userName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "streamUid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_StreamUid,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, streamUid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "streamSuid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_StreamSuid,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, streamSuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "role",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_Role,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, role),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "streamSid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_StreamSid,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, streamSid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rtmSid",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_RtmSid,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, rtmSid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomId",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_RoomId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, roomId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roomCreateTs",
        .dataTypeSpecific.clazz = Nil,
        .number = AgoraApaasUserReconnect_FieldNumber_RoomCreateTs,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(AgoraApaasUserReconnect__storage_, roomCreateTs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AgoraApaasUserReconnect class]
                                     rootClass:[ApaasUserRoot class]
                                          file:ApaasUserRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AgoraApaasUserReconnect__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\005\t\000\007\010\000\010\t\000\t\n\000\013\t\000\014\006\000\r\006\000\016\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
